apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-base-devops-deployment
  namespace: devops
  labels:
    app: backend-base-devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-base-devops
  template:
    metadata:
      labels:
        app: backend-base-devops
    spec:
      containers:
      - name: backend-base-devops
        image: localhost:8082/backend-base-devops
        imagePullPolicy: Always
        env: 
        - name: USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-base-devops-configmap
              key: username
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: backend-base-devops-secret
              key: apikey
        ports:
        - containerPort: 3001
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: backend-base-devops-svc
  namespace: devops
  labels:
    app: backend-base-devops
spec:
  selector:
    app: backend-base-devops
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata: 
  name: backend-base-devops-ingress
  namespace: devops
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /backend-path(/|$)(.*)
        pathType: ImplementationSpecific
        backend: 
          service: 
            name: backend-base-devops-svc
            port:
              number: 80
---
kind: ConfigMap 
apiVersion: v1 
metadata:
  name: backend-base-devops-configmap
  namespace: devops
data:
  username: 'Luis Oliveros'
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-base-devops-secret
  namespace: devops
type: Opaque
data:
  apikey: YWRtaW4xMjM=

# kubectl create secret docker-registry regcred --docker-server http://localhost:8082 --docker-username admin --docker-password admin123 --docker-email contacto.luisoliveros@gmail.com
